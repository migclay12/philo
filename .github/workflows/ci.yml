name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        compiler: [gcc, clang]
        include:
          - compiler: gcc
            cc: gcc
            cxx: g++
          - compiler: clang
            cc: clang
            cxx: clang++

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential

    - name: Build with standard flags
      run: make
      env:
        CC: ${{ matrix.cc }}

    - name: Test compilation
      run: |
        ./philo 4 410 200 200 &
        PHILO_PID=$!
        sleep 2
        kill $PHILO_PID 2>/dev/null || true

    - name: Build with debug flags
      run: make debug
      env:
        CC: ${{ matrix.cc }}

    - name: Clean build
      run: make fclean

    - name: Test edge cases
      run: |
        # Test invalid arguments
        ./philo 2>&1 | head -5
        ./philo 5 0 200 200 2>&1 | head -5

    - name: Test single philosopher
      run: |
        timeout 3s ./philo 1 800 200 200 || true

    - name: Check for memory leaks (basic)
      run: |
        # Simple memory check - run briefly and check exit code
        timeout 2s ./philo 2 800 200 200
        echo "Exit code: $?"

    - name: Build with sanitize
      run: |
        make sanitize
        echo "Sanitized build completed"

    - name: Final cleanup
      run: make fclean
